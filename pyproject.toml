[tool.poetry]
name = "langchain_study"
version = "0.1.0"
description = ""
authors = ["Masato Shimizu <ma6ato@gmail.com>"]
readme = "README.md"
packages = [{ include = "langchain_study", from = "src" }]

[tool.poetry.dependencies]
python = "3.11.7"
notebook = "7.0.8"
openai = "1.12.0"
langchain = "0.1.6"
pymupdf = "1.23.21"
slack-bolt = "1.18.1"
momento = "1.18.0"
boto3 = "1.34.41"
streamlit = "1.31.0"
duckduckgo-search = "4.4.3"
spacy = "3.7.2"
tiktoken = "0.5.2"
chromadb = "0.4.22"
chainlit = "1.0.200"
langchain-community = "0.0.19"
wikipedia = "1.4.0"
langchain-openai = "0.0.5"
redis = "5.0.1"
langchainhub = "0.1.14"
google-search-results = "2.4.2"
faiss-cpu = "1.7.4"
langchain-experimental = "0.0.50"
lancedb = "0.5.4"
pandas = "2.2.0"
python-dotenv = "1.0.1"
pyarrow = "14.0.2"
unstructured = { extras = ["local-inference"], version = "0.12.4" }


[tool.poetry.group.dev.dependencies]
pytest = "7.4.4"
taskipy = "1.12.2"
mypy = "1.8.0"
ruff = "0.2.1"

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
select = ["ALL"]
ignore = ["T201"]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.per-file-ignores]
"**/{modelio,retrieval,memory,chains,agents,callbacks}/*" = [
    "T201", # allow print
    "D100", # allow missing-module-docstring
    "D101", # allow missing-function-docstring
    "D102", # allow undocumented-public-method
    "D103", # allow undocumented-public-function
    "D104", # allow undocumented-private-method
    "E501", # allow line-too-long
]
"notebooks/*" = [
    "T201", # allow print
]

[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod", "validator"]

[tool.taskipy.tasks]
test = "pytest tests"
mypy = "mypy src tests"
ruff = "task ruff-check && task ruff-format"
ruff-check = "ruff check src --fix"
ruff-format = "ruff format src"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
